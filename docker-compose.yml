services:
  web-app:
    build:
      context: .
    ports:
      - "8000:8000"
    # Эта директива говорит о том, что мы вмонтируем данное приложение в наш проект Django
    volumes:
      - './store:/store'
    environment:
      # Мы не указываем ip-адрес базы данных, а передаем ссылку на другой сервис docker-compose
      - DB_HOST=database
      - DB_NAME=analityc
      - DB_USER=postgres
      - DB_PASS=Qwerty12345
      - DB_PORT=5432
#    networks:
#      - djangonetwork
    command: >
      sh -c "python manage.py runserver --insecure 0.0.0.0:8000"
    # Эта директива говорит, что наш сервис зависит от сервиса database и будет запущен после того, когда запустится database
    depends_on:
      - database

  database:
    image: postgres:16.4-alpine3.20
    ports:
      - '5432:5432'
#    networks:
#      - djangonetwork
    environment:
      - POSTGRES_DB=analityc
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=Qwerty12345

  redis:
    image: redis:7-alpine3.20
    hostname: redis

  # worker:
  #   build:
  #     context: .
  #   hostname: worker
  #   entrypoint: celery
  #   command: -A celery_app.app worker --loglevel=INFO
  #   volumes:
  #     - './store:/store'
  #   links:
  #     - redis
  #   depends_on:
  #     - redis
  #     - database
  #   environment:
  #     # Мы не указываем ip-адрес базы данных, а передаем ссылку на другой сервис docker-compose
  #     - DB_HOST=database
  #     - DB_NAME=analityc
  #     - DB_USER=postgres
  #     - DB_PASS=Qwerty12345
  #     - DB_PORT=5432

  # flower:
  #   build:
  #     context: .
  #   hostname: flower
  #   entrypoint: celery
  #   command: -A celery_app.app flower
  #   volumes:
  #     - './store:/store'
  #   links:
  #     - redis
  #   depends_on:
  #     - redis
  #   ports:
  #     - '5555:5555'
