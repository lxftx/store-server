services:
  stripe-cli:
    image: stripe/stripe-cli
    command: "listen --api-key ${STRIPE_SECRET_KEY} --forward-to web-app:8000/payment/webhook/"

  web-app:
    build:
      context: .
    ports:
      - "8000:8000"
    # Эта директива говорит о том, что мы вмонтируем данное приложение в наш проект Django
    volumes:
      - './store:/store'
    # environment:
    #   # Мы не указываем ip-адрес базы данных, а передаем ссылку на другой сервис docker-compose
    #   - DB_HOST=database
    #   - DB_NAME=analityc
    #   - DB_USER=postgres
    #   - DB_PASS=Qwerty12345
    #   - DB_PORT=5432
#    networks:
#      - djangonetwork
    command: >
      sh -c "python manage.py runserver 0.0.0.0:8000"
    # Эта директива говорит, что наш сервис зависит от сервиса database и будет запущен после того, когда запустится database
    depends_on:
      - database

  database:
    image: postgres:16.4-alpine3.20
    ports:
      - '5432:5432'
#    networks:
#      - djangonetwork
    environment:
      - POSTGRES_DB=${NAME}
      - POSTGRES_USER=${USER}
      - POSTGRES_PASSWORD=${PASSWORD}

  redis:
    image: redis:7-alpine3.20
    hostname: redis

  worker:
    build:
      context: .
    hostname: worker
    entrypoint: celery
    command: -A store worker --loglevel=INFO
    volumes:
      - './store:/store'
    links:
      - redis
    depends_on:
      - redis
      - database
    environment:
      # Мы не указываем ip-адрес базы данных, а передаем ссылку на другой сервис docker-compose
      - DB_HOST=${HOST}
      - DB_NAME=${NAME}
      - DB_USER=${USER}
      - DB_PASS=${PASSWORD}
      - DB_PORT=${PORT}

  flower:
    build:
      context: .
    hostname: flower
    entrypoint: celery
    command: -A store flower
    volumes:
      - './store:/store'
    links:
      - redis
    depends_on:
      - redis
    ports:
      - '5555:5555'